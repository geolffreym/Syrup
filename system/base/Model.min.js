"use strict";(function(window){var WARNING_MODEL={ERROR:{NOPACK:"Error packing model",OBJECTNEEDED:"Object need to set in model"}};function Model(){this.data=null;this.blob=null;this.scope={};this.type="POST";this.model=null;this.failed=null}Model.add("attach",function(name,attach){var self=this;_.assert(self.data,WARNING_MODEL.ERROR.NOPACK,"(Model .attach)");self.data.append(name,attach);return this});Model.add("fail",function(field,error){this.failed=true;return{field:field,code:error.code,error:error.error,coords:_.cartesianPlane(field)}});Model.add("getScope",function(){return this.scope});Model.add("getData",function(){return this.data});Model.add("getBinaries",function(){return this.blob});Model.add("file",function(input){var _self=this,_formData=new FormData,_files=[],_field=!_.is$(input)&&_$(input).get(0)||input;if(!_field.exist)return;return new Promise(function(resolve,reject){if(_field.type==="file"&&_.isSet(_field.name)){var _temp=_field.files,x=_temp.length;while(x--){_files[x]=_temp[x];_formData.append(_field.name,_temp[x])}}_self.scope["_files"]=_files;_self.blob=_formData;resolve(_self)})});Model.add("binary",function(model){var _self=this;_self.model=!_.is$(model)&&_$(model)||model;if(!_self.model.exist)return;return new Promise(function(resolve,reject){_self.model.find('input[type="file"]',function(field){_self.file(field).then(resolve)})})});Model.add("set",function(model,object){if(!_.isObject(object))_.error(WARNING_MODEL.ERROR.OBJECTNEEDED,"(Model .set)");var _self=this;_self.model=!_.is$(model)&&_$(model)||model;if(!_self.model.exist)return;_self.model.find("input, select, textarea",function(e){var _the_index=e.attr("name"),_option_din=null,_select_out=_.emptyStr;if(_the_index&&_the_index in object){_self.scope[_the_index]=object[_the_index];if(e.name==="select"){if(_.isArray(_self.scope[_the_index])){_.each(_self.scope[_the_index],function(v){_option_din=_$("<option/>");_option_din.text("content"in v&&v.content||_.emptyStr);_option_din.val("value"in v&&v.value||_.emptyStr);_select_out+=_option_din.object().outerHTML});e.html(_select_out)}}else{e.val(_self.scope[_the_index])}}})});Model.add("get",function(model){this.model=!_.is$(model)&&_$(model)||model;if(!this.model.exist)return;var _self=this,_modelData=new FormData,_field_array,_model_obj=_self.model.get(0),_fields=_model_obj.querySelectorAll("input, textarea, select"),x=_fields.length,_codes=null;_self.failed=false;return new Promise(function(resolve,reject){while(x--){if(!_fields[x])continue;if(_fields[x].type==="file"){_self.file(_fields[x]);continue}if(_fields[x].type==="checkbox"||_fields[x].type==="radio"){if(!_fields[x].checked){continue}}var field=_fields[x],fieldValue=field.value;if(!field.checkValidity()){_codes={valueMissing:"001",typeMismatch:"002",tooLong:"003",stepMismatch:"004",rangeUnderFlow:"005",rangeOverFlow:"006",patternMismatch:"007"};_.each(_codes,function(v,i){if(field.validity[i]){this.break=true;reject(_self.fail(field,{code:v,error:field.validationMessage}))}});return}if(_.isSet(field.name)){_modelData.append(field.name,fieldValue);_self.scope[field.name]=fieldValue}}_self.data=_modelData;resolve(_self)})});window.Model=Model})(window);