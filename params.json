{"name":"Syrup","tagline":"App with sweet flavor.","body":"Syrup\r\n=======\r\nApp with sweet flavor\r\n\r\nDescription\r\n===========\r\n\r\n**With the help of**\r\n\r\n* Templating [Mustache](https://github.com/janl/mustache.js)\r\n* Web Dependencies [Requirejs](http://requirejs.org/docs/api.html)\r\n\r\n\r\n**Based**\r\n\r\n*MVC Pattern:*\r\n\r\n* Model\r\n* View\r\n* Controller\r\n \r\n*MTV Pattern:*\r\n\r\n* Model\r\n* View\r\n* Template\r\n\r\nCompatibility with browsers\r\n=======\r\n    \r\n    -IE > 10\r\n    -Chrome > 32\r\n    -Firefox > 29\r\n    -Opera > 23 \r\n    -Safari >  7 \r\n\r\n\r\nControlling browsers support.\r\n\r\n```js\r\nif(_.nav.unsupported){\r\n    //What to do?\r\n}\r\n```\r\n*If there is any browser incompatibility please notify*\r\n\r\n\r\nBasic Config\r\n=======\r\n\r\nInstallation\r\n-----------\r\n\r\nUsing [Bower](http://bower.io/):\r\n\r\n`bower install syrup`\r\n\r\nUsing [Git](http://git-scm.com/docs/git-clone):\r\n\r\n`git clone https://github.com/geolffreym/Syrup.git` \r\n\r\n\r\nNav Status\r\n----------\r\nSee my browser status\r\n\r\n```js\r\nconsole.log(_.nav);\r\n/*object nav {\r\n    unsupported : true || false; //If the navigator support the framework\r\n    cookies : false || true //Cookies enabled? \r\n    javascript : false || true //Javascript Enabled?\r\n    online : true || false // Site online ?\r\n    local : String // My local browser complete details;\r\n}*/\r\n\r\n```\r\n\r\nConfig\r\n------\r\nConfiguration is very simple, you just have to access the folder /config/ and edit the file init.js \r\n\r\nYou need to set the APP_PATH, is who is responsible for setting the relative directory of your application, the default is '/' and finally the environment, which can be either development or production.\r\n\r\n*Example APP_PATH: (/assets/)*  \r\n\r\n  \r\nJoining files\r\n-------------\r\n\r\n**Node JS Required**\r\n\r\nBlend files is relatively simple, you must first establish the libraries you want to use in environment.\r\n\r\nSyrup is modular so you can create your own libraries and integrate the autoloader\r\n\r\n```js\r\n//Development\r\n exports.files = {\r\n        js: {\r\n            output: 'dist/init', //The output\r\n            src: [\r\n                'app/config/init', // Needed do not change\r\n                'system/base/init', // Needed do not change\r\n//              'lib/Form',\r\n//              'lib/Upload' // Add all the necessary scripts for startup\r\n            ]\r\n\r\n        }\r\n    }\r\n```\r\n\r\nThen you must get packages with `npm install` and finally run `npm start` and you'll have a unified library and .min in folder /dist/\r\n\r\n*If you do not have the option of using node, you must manually change the settings in the /dist/init.js and include libs separately*\r\n\r\n\r\nIncluding Scripts\r\n================\r\n\r\n*You should not use the controllers on the unification of files, it is necessary to have separate it for each application*\r\n\r\n```html    \r\n<script src=\"YOUR PATH/Syrup/dist/init.min.js\"></script>\r\n<script src=\"YOUR PATH/Syrup/controller/YOUR CONTROLLER.min.js\"></script>\r\n```\r\nWhen you need to add libraries to your drivers that were not pre-compiled in the unification, you can call them using the Require class, as explained later use.\r\n\r\nDOM Tools\r\n=======\r\n**Avoid conflicts**\r\n\r\n```js\r\n\r\n//Returns a _$ object\r\nvar S = _.noConflict(),\r\n    element = S('#my-element');\r\n\r\n//Using function\r\n(function(alias){\r\n    alias('<div></div>');\r\n    alias('.selector');\r\n})(_$)\r\n\r\n```\r\n\r\n**Creating a $ object**\r\n\r\n*This method helps you find Nodes objects and generate $ object*\r\n\r\n```js\r\nvar my_selector = _$('<div>');\r\nvar my_selector = _$('*+'); // All the dom nodes ^_^\r\nvar my_selector = _$('.selector');\r\nvar my_selector = _$('.selector:pseudo'); //Pseudo codes must follow the CSS syntax\r\nvar my_selector = _$('.selector_parent .selector_child');\r\nvar my_selector = _$('#selector');\r\n\r\n//Example Selector All:\r\nvar my_selector = _$('.selector+'); //Get all .selector in DOM\r\n```\r\n    \r\n*You can try many possibilities to find and get dom elements*\r\n\r\n*Now we can use it.*\r\n\r\n**Attribute `exist`**\r\n\r\n*(Verify Node element existence)*\r\n```js\r\nvar my_selector = _$('.dom_to_verify');\r\nif(my_selector.exist){\r\n    //TRUE if my_selector exist in DOM tree\r\n}\r\n```\r\n   \r\n**Method `.object()`**\r\n\r\n*(Return $ object)*\r\n```js    \r\nvar my_selector = _$('.$_to_get');\r\n\r\nmy_selector.object(); //Return $ object\r\n```\r\n\r\n**Method `.ready()`**\r\n\r\n*(Used for the execution of our code, when the Document Object ready)*\r\n```js    \r\nvar my_selector = _$(document);\r\n\r\n//The selector must be a document object\r\nmy_selector.ready(function(){\r\n    /* My code */\r\n}); \r\n\r\n//Or Just\r\n_$(function(){\r\n\r\n})\r\n``` \r\n   \r\n**Method `.load()`**\r\n\r\n*(Used for the execution of our code, when the the complete page is fully loaded)*\r\n```js    \r\nvar my_selector = _$(window);\r\n\r\n//The selector must be a window object\r\nmy_selector.load(function(){\r\n    /* My code */\r\n});\r\n```    \r\n\r\n**Method `.filter(filter, callback, e_handler(optional))`**\r\n\r\n*(Filter pattern match)*\r\n```js\r\nvar my_selector = _$('.selector');\r\n\r\nmy_selector.children(function(child){\r\n    _$(child).filter('.child_1', function(){\r\n\r\n        /*Is .child_1 inside .selector ?*/\r\n        \r\n    },function(){\r\n        /*Not founded*/\r\n    })\r\n})\r\n```    \r\n   \r\n**Method `.empty(void)`**\r\n\r\n*(Empty Node Object)*\r\n```js\r\nvar my_selector = _$('.selector');\r\n\r\nmy_selector.empty(); // Node Empty\r\n```   \r\n   \r\n**Method `.clone(bool)`**\r\n\r\n*(Clone Object. Optional clone child's object)*\r\n```js\r\nvar my_selector = _$('.selector'),\r\n    _clone_with_child,\r\n    _clone_not_child;\r\n\r\n_clone_with_child = my_selector.clone(true); //Clone Childs\r\n_clone_not_child = my_selector.clone();\r\n```    \r\n    \r\n**Method `.data(data_name, data_value)`**\r\n\r\n*(Data Object. If data_value is passed, it assigned to object, else it returned )*\r\n\r\n```html\r\n<button id=\"my_button\" data-id=\"5\"></button>\r\n```\r\n```js\r\nvar my_selector = _$('#my_button');\r\n\r\nmy_selector.data('id'); // Returns 5\r\nmy_selector.data('id', 10); // Assign 10. \r\n```\r\n```html\r\n//RESULT OF ASSIGN\r\n<button id=\"my_button\" data-id=\"10\"></button>\r\n```    \r\n    \r\n**Method `.prop(prop_value)`**\r\n\r\n*(Prop Object. If prop_value object type is passed, it assigned, else if prop_value is string type, then value is returned)*\r\n\r\n```html\r\n<button id=\"my_button\">My Example</button>\r\n```\r\n```js\r\nvar my_selector = _$('#my_button');\r\n\r\nmy_selector.prop('textContent'); // Returns My Example\r\nmy_selector.data({'textContent': My Other Example}); // Assign My Other Example. \r\n```\r\n```html\r\n<button id=\"my_button\">My Other Example</button>\r\n```\r\n\r\n**Method `.attr(attr_value)`**\r\n\r\n*(Attr Object. If attr_value object type is passed, it assigned, else if attr_value is string type, then value is returned)*\r\n```html\r\n<a href=\"http://out.com\">My Link</a>\r\n```\r\n```js\r\nvar my_selector = _$('a');\r\n\r\nmy_selector.attr('href'); // Returns http://out.com\r\nmy_selector.attr({'href': 'http://inner.com'}); // Assign http://inner.com. \r\n```\r\n```html\r\n<a href=\"http://inner.com\">My Link</a>\r\n``` \r\n\r\n**Method `.removeAttr(attr_name)`**\r\n\r\n*(Remove Attr from Object. Attr_name needed )*\r\n\r\n```html\r\n<a href=\"http://out.com\">My Link</a>\r\n```\r\n```js\r\nvar my_selector = _$('a');\r\n\r\nmy_selector.removeAttr('href'); // Remove href\r\n```\r\n```html\r\n<a>My Link</a>\r\n```\r\n\r\n**Method `.css(object | style_name)`**\r\n\r\n*(CSS Object. If style_value object type is passed, it assigned, else if css_value is string type, then value is returned)*\r\n\r\n```html\r\n<div style=\"border:none; background-color:#ccc;\"></div>\r\n```\r\n```js\r\nvar my_selector = _$('div');\r\n\r\nmy_selector.css('background-color'); // Returns #ccc\r\nmy_selector.css({'color': '#666'}); // Assign color:#666 \r\n```\r\n```html    \r\n<div style=\"border:none; background-color:#ccc; color:#666;\"></div>\r\n```\r\n\r\n**Method `.after(html || _$ Object)`**\r\n\r\n*(Insert Node object after element)*\r\n\r\n```js\r\nvar my_selector = _$('.first_div'),\r\n    second_div = _$('.second_div');\r\n\r\nmy_selector.after(second_div);\r\nsecond_div.after('<div class=\"third_div\"></div>');\r\n```\r\n    \r\n**Method `.before(html || _$ Object)`**\r\n\r\n*(Insert Node object before element)*\r\n```js\r\nvar my_selector = _$('.third_div'),\r\n    second_div = _$('.second_div');\r\n\r\nmy_selector.before(second_div);\r\nsecond_div.before('<div class=\"first_div\"></div>');\r\n```    \r\n    \r\n**Method `.append(html || _$ Object)`**\r\n\r\n*(Append Node object)*\r\n\r\n```js \r\nvar my_selector = _$('.third_div'),\r\n    second_div = _$('.second_div');\r\n\r\nmy_selector.append(second_div);\r\nmy_selector.append('<div class=\"first_div\"></div>');\r\n```\r\n\r\n**Method `.html(html)`**\r\n\r\n*(Create HTML in Node object. If html is passed is assigned else is returned)*\r\n\r\n```js  \r\nvar my_selector = _$('div');\r\n\r\nmy_selector.html('<div></div>');\r\nmy_selector.html('Text'); // Replace div\r\nmy_selector.html(); //Return \"Text\" \r\n```\r\n    \r\n**Method `.text(text)`**\r\n\r\n*(Create Text in Node object. If text is passed is assigned else is returned)*\r\n\r\n```js  \r\nvar my_selector = _$('div');\r\n\r\nmy_selector.text('Text'); //Text node created\r\nmy_selector.text(); //Return Text\r\n```\r\n    \r\n**Method `.val(text)`**\r\n\r\n*(Assign value in Node object. If value is passed is assigned else is returned)*\r\n```html\r\n<input type=\"text\" value=\"\">\r\n```\r\n```js\r\nvar my_selector = _$('input[type=\"text\"]');\r\n\r\nmy_selector.val('My value'); //Value assigned\r\nmy_selector.val(); //Return My value\r\n```\r\n```html\r\n<input type=\"text\" value=\"My value\">\r\n```\r\n\r\n**Method `.hide(void)`**\r\n\r\n*(Hide Node Object)*\r\n\r\n```js\r\nvar my_selector = _$('div');\r\n\r\nmy_selector.hide(); //Element display none\r\n```\r\n\r\n**Method `.show(void)`**\r\n\r\n*(Show Node Object)*\r\n\r\n```js\r\nvar my_selector = _$('div');\r\n\r\nmy_selector.show(); //Element display block\r\n```\r\n\r\n**Method `.animate([{'prop':'init'},{'prop':'next'}...], {delay:int, duration: int, iterations:1} , callback)`**\r\n\r\n*(Animate elements. If callback is passed in second parameters default conf is {delay:300, duration:1000, iterations:1} )*\r\n```js\r\nvar my_selector = _$('.selector');\r\n\r\nmy_selector.animate ( [{opacity: '0'},{opacity: '1'}], {delay: 0, duration: 50}, \r\n                       function() {\r\n                            //On finish?\r\n                       }\r\n                    );\r\n            \t               \r\n\r\n```\r\n**Method `.parent(callback)`**\r\n\r\n*(Get Node Parent first. Callback Needed)*\r\n```html\r\n<div class=\"parent\">\r\n    <div class=\"child\"></div>\r\n</div>\r\n```\r\n```js\r\nvar my_selector = _$('.child');\r\n\r\nmy_selector.parent(function(parent){\r\n    _$(parent) // Object class parent\r\n}); \r\n```    \r\n    \r\n**Method `.parents(parent_class, callback)`**\r\n\r\n*(Get Node Parent Until. Parent_class and Callback Needed)*\r\n\r\n```html\r\n<div class=\"parent\">\r\n    <div class=\"child\">\r\n        <div class=\"grandson\"></div>\r\n    </div>\r\n</div>\r\n```\r\n```js    \r\nvar my_selector = _$('.grandson');\r\n\r\nmy_selector.parents('.parent', function(parent){\r\n    _$(parent) // Object class parent\r\n});\r\n ```\r\n    \r\n**Method `.children(callback)`**\r\n\r\n*(Get Child Nodes. Callback Needed)*\r\n```html\r\n<div class=\"parent\">\r\n    <div class=\"child\"></div>\r\n</div>\r\n```\r\n```js    \r\nvar my_selector = _$('.parent');\r\n\r\nmy_selector.parent(function(child){\r\n    _$(child) // Object class child\r\n});\r\n```\r\n    \r\n    \r\n**Method `.next(callback)`**\r\n\r\n*(Get next sibling Node. Callback Needed)*\r\n\r\n```html\r\n<div class=\"parent\">\r\n    <div class=\"child_1\"></div>\r\n    <div class=\"child_2\"></div>\r\n</div>\r\n```\r\n```js\r\nvar my_selector = _$('child_1');\r\n\r\nmy_selector.next(function(sibling){\r\n    _$(sibling) // Object class child_2\r\n});\r\n```\r\n       \r\n**Method `.nexts(filter, callback)`**\r\n\r\n*(Get next sibling Node. Callback Needed, if filter is passed the child are matched else return all)*\r\n\r\n```html\r\n<div class=\"parent\">\r\n    <div class=\"child_1\"></div>\r\n    <div class=\"child_2\"></div>\r\n    <div class=\"child_2\"></div>\r\n    <div class=\"child_3\"></div>\r\n</div>\r\n```\r\n```js    \r\nvar my_selector = _$('child_1');\r\n\r\nmy_selector.nexts('.child_2', function(siblings){\r\n     // Object list class child_2\r\n}); \r\n\r\n my_selector.nexts(function(siblings){\r\n         // Object list child_2, child_2, child_3 \r\n         // All nexts nodes returned\r\n    }); \r\n```\r\n    \r\n**Method `.find(filter, callback)`**\r\n\r\n*(Get next sibling Node. Filter and Callback Needed)*\r\n\r\n```html\r\n<div class=\"parent\">\r\n    <div class=\"child_1\"></div>\r\n    <div class=\"child_2\"></div>\r\n    <div class=\"child_2\"></div>\r\n    <div class=\"need_be_found\"></div>\r\n</div>\r\n```\r\n```js\r\nvar my_selector = _$('parent');\r\n\r\nmy_selector.find('.need_be_found', function(found){\r\n      _$(found) // Object class need_be_found is inside .parent?\r\n});\r\n```\r\n    \r\n**Method `.hasClass(class)`**\r\n\r\n*(Verify Class in element. Return true if the class is founded in element else return false)*\r\n```js\r\nvar my_selector = _$('.div');\r\nif(my_selector.hasClass('class2')){\r\n    //TRUE IF .div has the class2\r\n}\r\n```\r\n   \r\n**Method `.addClass(class)`**\r\n\r\n*(Add a new class to an element)*\r\n```js\r\nvar my_selector = _$('.div');\r\n\r\nmy_selector.addClass('div2') // Add the class div2 to .div\r\n```\r\n```html\r\n//RESULT\r\n<div class=\"div div2\"></div>\r\n```\r\n   \r\n**Method `.toggleClass(class)`**\r\n\r\n*(Toggle class in element)*\r\n```js\r\nvar my_selector = _$('.div');\r\n    \r\nmy_selector.toggleClass('div') // If have the class its removed else is added\r\n```\r\n\r\n**Method `.removeClass(class)`**\r\n\r\n*(Remove class from element)*\r\n```js\r\nvar my_selector = _$('.div');\r\n\r\nmy_selector.removeClass('div') // If have the class its removed\r\n```\r\n```html\r\n<div></div>\r\n```    \r\n    \r\n**Method `.fadeOut(mseconds)`**\r\n\r\n*(Fade Out element. If mseconds is passed it used for time fade else default is 50)*\r\n```js\r\nvar my_selector = _$('.div');\r\n\r\nmy_selector.fadeOut(100)\r\n```\r\n\r\n**Method `.fadeIn(mseconds)`**\r\n\r\n*(Fade In element. If mseconds is passed it used for time fade else default is 50)*\r\n```js\r\nvar my_selector = _$('.div');\r\n\r\nmy_selector.fadeIn(100)\r\n```\r\n\r\n**Method `.width(int)`**\r\n\r\n*(Assign or return width of element. If int value is passed its assigned to element else return the width )*\r\n```js\r\nvar my_selector = _$('.div');\r\n\r\nmy_selector.width(100) // Assign 100 to width\r\nmy_selector.width() // Return width\r\n```\r\n    \r\n**Method `.height(int)`**\r\n\r\n*(Assign or return height of element. If int value is passed its assigned to element else return the height )*\r\n```js\r\nvar my_selector = _$('.div');\r\n\r\nmy_selector.height(100) // Assign 100 to height\r\nmy_selector.height() // Return height\r\n```\r\n\r\n**Method `.is(class|pseudo-class|prop)`**\r\n\r\n*(Verify element. Para needed )*\r\n```js\r\nvar my_selector = _$('.div');\r\n\r\nif(my_selector.is('.div')){\r\n     //TRUE IF my_selector is .div\r\n}\r\n```   \r\n \r\n**Method `.get(element)`**\r\n\r\n*(Return elemnt in position \"element\")*\r\n    \r\n```html\r\n<ul>\r\n        <li>A</li>\r\n        <li>B</li>\r\n        <li>C</li>\r\n</ul>\r\n```\r\n```js\r\nvar my_selector = _$('li+');\r\n\r\nmy_selector.get(0) // Return <li>A</li>\r\nmy_selectot.get() // [<li>A</li>, <li>B</li>, <li>C</li>]\r\n```\r\n\r\n**Method `.each(callback)`**\r\n\r\n*(Loop childs of element. Param callback needed)*\r\n    \r\n```html\r\n<div class=\"parent\">\r\n    <div class=\"child\"></div>\r\n    <div class=\"child2\"></div>\r\n</div>\r\n```\r\n```js    \r\nvar my_selector = _$('.parent');\r\n\r\nmy_selector.each(function(v,i,p){\r\n    v // Element\r\n    i // Index\r\n    p // Loop Control { p.last or p.first}\r\n    \r\n    v (.child)\r\n    i (0)\r\n    p (p.first is TRUE)\r\n    \r\n    v (.child2)\r\n    i (1)\r\n    p (p.first is FALSE and p.last is TRUE)\r\n    \r\n})\r\n```\r\n\r\n**Method `.offset(object)`**\r\n\r\n*(Assign or return offset element. If object is passed its assigned to element else return the offset)*\r\n```js\r\nvar my_selector = _$('.div');\r\n\r\nmy_selector.offset({top:10,;left:10}) // Assign position left and top to element\r\nmy_selector.offset() // return {top:int,left:int,bottom:int,right:int}\r\n```\r\n \r\n**Method `.sort(prop(optional) , bool (optional), elem(optional))`**\r\n\r\n*(Sort elements. If prop is passed is sorted by prop,if bool is true is order desc)*\r\n\r\n```html\r\n <ul class=\"parent\">\r\n   <li>B</li>\r\n   <li>A</li>\r\n   <li>D</li>\r\n   <li>C</li>\r\n </ul>\r\n \r\n <ul>\r\n     <li sortby=\"4\">A</li>\r\n     <li sortby=\"2\">D</li>\r\n     <li sortby=\"1\">B</li>\r\n     <li sortby=\"3\">C</li>\r\n </ul>\r\n \r\n```\r\n```js\r\nvar my_selector = _$('.parent li+'); //All li\r\n\r\nmy_selector.sort() \r\n// Sort Element by default innerHtml prop, order asc and \r\n// return and array with ordered elements\r\n\r\n//Using custom sort\r\nmy_selector.sort('sortby')\r\n```\r\n```html\r\n\r\n<!--Using innerHtml prop-->\r\n<ul class=\"parent\">\r\n   <li>A</li>\r\n   <li>B</li>\r\n   <li>C</li>\r\n   <li>D</li>\r\n</ul>\r\n\r\n<!--Using custom attribute-->\r\n<ul>\r\n    <li sortby=\"1\">B</li>\r\n    <li sortby=\"2\">D</li>\r\n    <li sortby=\"3\">C</li>\r\n    <li sortby=\"4\">A</li>\r\n</ul>\r\n\r\n```\r\n**Method `.trigger(event, callback)`**\r\n\r\n*(Trigger Event. Event and Callback Needed)*\r\n```js\r\nvar body = _$('body'),\r\nmy_selector = _$('.div');\r\n\r\nmy_select.listen('click', function(){\r\n    alert('I am clicked');\r\n});\r\n\r\nbody.listen('click', '.div', function(){\r\n        alert('I am clicked as delegated');\r\n});\r\n\r\nbody.listen('click', '.div1', function(){\r\n            alert('I am clicked as delegated in div1');\r\n});   \r\n\r\n\r\nmy_selector.trigger('click'); // alert I am Clicked and I am clicked as delegated\r\n_$('.div1').trigger('click') // alert I am clicked as delegated in div1\r\n```\r\n    \r\n\r\nEvents\r\n--------------\r\n\r\n**Method `.listen(event, delegate(optional), callback)`**\r\n\r\n*(Add event listener to object)*\r\n```js\r\nvar body = _$('body'),\r\n    my_selector = _$('.selector');\r\n    \r\n//Event delegation\r\nbody.listen('click', '.selector', function(e){\r\n    \r\n    /*My Code*/\r\n    \r\n}).listen('keydown','textarea', function(e){\r\n\r\n    /*My Code*/\r\n    \r\n})\r\n\r\n//Event assign\r\nmy_selector.listen('click', function(e){\r\n    \r\n    /*My Code*/\r\n    \r\n})\r\n```\r\n\r\n**Method `.unlisten(event)`**\r\n\r\n*(Remove event listener to object)*\r\n```js\r\nvar body = _$('body');\r\n\r\n//Event assign\r\nbody.listen('click',  function(e){\r\n\r\n    /*My Code*/\r\n\r\n})\r\n\r\n//Remove Event assign\r\nbody.unlisten('click')\r\n```\r\n    \r\nHelpers\r\n--------   \r\n      \r\n**Method `.cartesianPlane($ Object || Object, all)`**\r\n\r\n*(Return the cartesian plane object info. If param all is passed return all selector matches info)*\r\n```js    \r\nvar my_selector = _$('input[type=\"text\"]');\r\n\r\n_.cartesianPlane(my_selector);\r\n//  return {\r\n               bottom: 565\r\n               left: 0\r\n               right: 346\r\n               top: 0\r\n               height: 565\r\n               width: 366\r\n           }\r\n```\r\n\r\n**Method `.getElementIndex(Node Object)`**\r\n\r\n*(Return the index position in DOM tree)*\r\n```js    \r\nvar my_selector = _$('input[type=\"text\"]').object();\r\n\r\n_.getElementIndex(my_selector);\r\n//  return 5 assuming position\r\n```\r\n\r\nSyrup Methods\r\n=======\r\n\r\nValidation\r\n--------------\r\n**Method `.assert(param, msg)`**\r\n\r\n*(Validate if a param is seted). param needed, msg default = Param needed*\r\n```js    \r\nfunction test (param){\r\n_.assert(param,'Param is needed');\r\nalert(param);\r\n}\r\n\r\ntest(); //assert is executed\r\ntest('Param passed'); //assert is omitted\r\n```      \r\n\r\n**Method `.isArray(param)`**\r\n\r\n*(Validate if param is Array)*\r\n```js    \r\nvar no_array = 'I am not Array', \r\n my_array = [1,2,3];\r\n \r\n_.isArray(no_array) // Return FALSE\r\n_.isArray(my_array) // Return TRUE\r\n```\r\n\r\n**Method `.isObject(param)`**\r\n\r\n*(Validate if param is Object)*\r\n```js    \r\nvar no_object = 'I am not Object', \r\n my_object = {a:1,b:2,c:3};\r\n \r\n_.isObject(no_object) // Return FALSE\r\n_.isObject(my_object) // Return TRUE    \r\n```\r\n  \r\n**Method `.isGlobal(param)`**\r\n\r\n*(Validate if param is Global Node element. Example = Window || Document || ...)*\r\n```js    \r\nvar no_global = _$('body').object() || document.body, \r\n my_global = document;\r\n \r\n_.isGlobal(no_global) // Return FALSE\r\n_.isGlobal(my_global) // Return TRUE\r\n```\r\n        \r\n**Method `.is$(param)`**\r\n\r\n*(Validate if param is $ object.) *\r\n```js    \r\nvar no_$ = document, \r\n my_$ = _$('body');\r\n \r\n_.is$(no_$) // Return FALSE\r\n_.is$(my_$) // Return TRUE \r\n```\r\n      \r\n**Method `.isString(param)`**\r\n\r\n*(Validate if param is String.)*\r\n```js    \r\nvar no_string = document, \r\n my_string = 'String example';\r\n \r\n_.isString(no_string) // Return FALSE\r\n_.isString(my_string) // Return TRUE\r\n```\r\n      \r\n**Method `.isFunction(param)`**\r\n\r\n*(Validate if param is Function.)*\r\n```js    \r\nvar no_function = 'String example', \r\n my_function = function(){\r\n \r\n };\r\n \r\n_.isFunction(no_function) // Return FALSE\r\n_.isFunction(my_function) // Return TRUE \r\n```\r\n     \r\n**Method `.isHtml(param)`**\r\n\r\n*(Validate if param is Html.)*\r\n```js    \r\nvar no_html = 'String example', \r\n my_html = '<div>Hello!</div>';\r\n \r\n_.isHtml(no_html) // Return FALSE\r\n_.isHtml(my_html) // Return TRUE \r\n```\r\n     \r\n**Method `.isBoolean(param)`**\r\n\r\n*(Validate if param is Boolean.)*\r\n```js    \r\nvar no_bool = 'String example', \r\n my_bool = TRUE';\r\n \r\n_.isBoolean(no_bool) // Return FALSE\r\n_.isBoolean(my_bool) // Return TRUE\r\n```\r\n     \r\n**Method `.isRegexp(param)`**\r\n\r\n*(Validate if param is Regexp.)*\r\n```js    \r\nvar no_regexp = 'String example', \r\n my_regexp = /[1-9]/g || new RegExp('[1-9]','g');\r\n \r\n_.isRegexp(no_regexp) // Return FALSE\r\n_.isRegexp(my_regexp) // Return TRUE\r\n```     \r\n     \r\n**Method `.isSet(param)`**\r\n\r\n*(Validate if param is set.)*\r\n```js \r\nvar no_set = undefined || NULL || FALSE, \r\n my_set = 'Seted' || TRUE || ....;\r\n \r\n_.isSet(no_set) // Return FALSE\r\n_.isSet(my_set) // Return TRUE\r\n```\r\n     \r\n**Method `.isEmpty(param)`**\r\n\r\n*(Validate if param is empty.)*\r\n```js    \r\nvar empty = '' || [] || ' ', \r\n no_empty = [1,2,3,4] || 'Not Empty';\r\n \r\n_.isEmpty(no_empty) // Return FALSE\r\n_.isEmpty(empty) // Return TRUE\r\n```\r\n     \r\n**Method `.isUrl(param)`**\r\n\r\n*(Validate if param is URL.)*\r\n```js    \r\nvar no_url = 'String Example', \r\n my_url = 'http://google.com' || 'https://google.com';\r\n \r\n_.isUrl(no_url) // Return FALSE\r\n_.isUrl(my_url) // Return TRUE\r\n```\r\n     \r\n**Method `.isMail(param)`**\r\n\r\n*(Validate if param is mail.)*\r\n```js\r\nvar no_email = 'String Example', \r\n my_email = 'i_am_mail@gmail.com';\r\n  \r\n_.isMail(no_mail) // Return FALSE\r\n_.isMail(my_mail) // Return TRUE\r\n```\r\n\r\n**Method `.isJson(param)`**\r\n\r\n*(Validate if param is JSON.)*\r\n```js \r\nvar no_json = {a:1,b:2}, \r\n my_json = '{\"a\":\"1\",\"b\":\"2\"}';\r\n  \r\n_.isJson(no_json) // Return FALSE\r\n_.isJson(my_json) // Return TRUE\r\n```\r\n\r\n**Method `.isNumber(param)`**\r\n\r\n*(Validate if param is Number.)*\r\n```js\r\nvar no_number = 'No Number', \r\n my_number = '123' || 123;\r\n  \r\n_.isNumber(no_number) // Return FALSE\r\n_.isNumber(my_number) // Return TRUE\r\n```\r\n\r\nHelpers\r\n----------\r\n\r\n**Method `.warning(msg)`**\r\n\r\n*(Show console warning.)*\r\n```js           \r\n_.warning('Field Empty'); // 04:12:05 PM -> Field Empty\r\n```\r\n     \r\n**Method `.error(msg)`**\r\n\r\n*(Throw console error.)*\r\n```js           \r\n_.error('No param'); // 04:12:05 PM -> No param\r\n```\r\n  \r\n**Method `.interval(callback, conf)`**\r\n\r\n*(Set interval function based in thread process)*\r\n```js           \r\nvar conf = {\r\n              delay: 0x32, // Time to wait between each loop \r\n              limit: 0xA // max iterations if negative value is passed it is descendant\r\n            }\r\n_.interval(function (x) {\r\n         x // each value since 0 to limit\r\n     }, conf);\r\n```\r\n     \r\n**Method `.each(object || array, callback)`**\r\n\r\n*(Intuitive objects or tour arrangements)*\r\n```js           \r\n_.each([1,2,3], function(v,i,p){\r\n    v // Element\r\n    i // Index or Key\r\n    p // Loop Control { p.last or p.first}\r\n    \r\n    v (1)\r\n    i (0)\r\n    p (p.first is TRUE)\r\n    \r\n    v (2)\r\n    i (1)\r\n    p (p.first is FALSE and p.last is FALSE)\r\n    \r\n    v (3)\r\n    i (2)\r\n    p (p.first is FALSE and p.last is TRUE)\r\n})\r\n```\r\n**Method `.callbackAudit(callback, param1, param2, ..)`**\r\n\r\n*(This verifies that the callback set, if so then runs it with the given parameters)*\r\n```js    \r\nvar _my_callback = function(a,b){\r\n    alert(a);\r\n    alert(b);\r\n}       \r\n_.callbackAudit();//No callback, no execution and no errors throws, just omitted\r\n_.callbackAudit(_my_callback, 1, 2);//Callback executed with 1 and 2 parameters \r\n```\r\n\r\n**Method `.extend(target, source, overwrite)`**\r\n\r\n*(Extend Object)*\r\n```js    \r\nvar _my_target = {a:1,b:5},\r\n    _my_source = {b:2,c:3};\r\n    \r\n_.extend(my_target, _my_source); //Return {a:1,b:5,c:3} not overwrite the target\r\n_.extend(my_target, _my_source, TRUE); //Return {a:1,b:2,c:3}\r\n```    \r\n\r\n\r\nArray Tools\r\n------------\r\n\r\n**Method `.compactArray(array)`**\r\n\r\n*(Filter Null, FALSE or empty in array)*\r\n```js    \r\nvar _my_array = [1,2,3,NULL,'',FALSE];\r\n\r\n_.compactArray(_my_array); // [1,2,3];\r\n```\r\n    \r\n**Method `.specArray(array)`**\r\n\r\n*(Speculate Array)*\r\n```js    \r\nvar _my_array = //Dinamic value can be [1,2,3] or [1]\r\n   \r\n_.specArray(_my_array); \r\n// if _my_array length > 1 return array else return first value\r\n``` \r\n   \r\n**Method `.filterArray(array,callback)`**\r\n\r\n*(Filter Array)*\r\n```js    \r\n_.filterArray([1,2,3], function(v){\r\n    return v % 2 === 0;\r\n})\r\n```\r\n    \r\n**Method `.matchInArray(regexp,haystack)`**\r\n\r\n*(Verify existence of element in array using regexp)*\r\n```js    \r\n_.matchInArray(/happy/g,['help','up','happy']) // Return TRUE\r\n``` \r\n   \r\n**Method `.uniqueArray(array)`**\r\n\r\n*(Return unique array, with not repeated values)*\r\n```js    \r\n_.uniqueArray([1,2,3,4,1,2]) // Return [1,2,3,4]\r\n```\r\n    \r\n**Method `.toArray(String|Object)`**\r\n\r\n*(Parse String or Object to Array)*\r\n```js    \r\n_.toArray('Hola') // Return ['H','o','l','a']\r\n_.toArray({a:1,b:2,c:3}) // Return [1,2,3]\r\n```\r\n    \r\n    \r\nObject Tools\r\n------------\r\n\r\n**Method `.inObject(needle, haystack)`**\r\n\r\n*(Verify existence of element in object)*\r\n\r\n*Array is considered a native type inherited from Object, you can use an array as a parameter haystack*\r\n```js    \r\n_.inObject(5, {a:5,b:6}) //Return TRUE\r\n```\r\n    \r\n**Method `.toObject(String|Array)`**\r\n\r\n*(Parse String or Array to Object)*\r\n```js    \r\n_.toObject('Hola') // Return [0=>'H',1=>'o',2=>'l',3=>'a']\r\n_.toObject(['H','o','l','a']) // Return [0=>'H',1=>'o',2=>'l',3=>'a']\r\n```\r\n\r\n**Method `.objectDistribute(Object, index)`**\r\n\r\n*(Joins the elements of an object in a selected index)*\r\n```js    \r\n_.objectDistribute({a:'Hi',b:'What',c:'MyIndex'},'c') \r\n// Return {\r\n    MyIndex:{\r\n        a:'Hi',\r\n        b:'What'\r\n    }\r\n}\r\n```\r\n\r\n**Method `.objectWatch(Object, callback)`**\r\n\r\n*(Watch for object changes. If a change is made the callback is triggered). Check Support*\r\n```js    \r\nvar obj = {a:'Hi',b:'What',c:'MyIndex'};\r\n\r\n_.objectWatch(obj, function(changes){\r\n    //obj has changed. What to do?\r\n}) \r\n\r\n//Callback executed\r\nobj.a = 'New'\r\n```\r\n\r\n**Method `.objectImmutable(Object)`**\r\n\r\n*(Return a immutable object)*\r\n```js    \r\nvar obj = {a:'Hi',b:'What',c:'MyIndex'};\r\n\r\n_.objectImmutable(obj) \r\n```\r\n\r\nString Tools\r\n------------\r\n    \r\n**Method `.htmlEntities(str)`**\r\n\r\n*(Reformat html to unicode from String)*\r\n```js     \r\nvar _string = '<div>I am a html</div>'      \r\n\r\n_.htmlEntities(_string); // &lt;div&gt;I am a html&lt;/div&gt;\r\n``` \r\n\r\n**Method `.truncateString(str, limit)`**\r\n\r\n*(Truncate string until limit)*\r\n```js     \r\nvar _string = 'I need be truncated until here'      \r\n\r\n_.truncateString(_string, 9); // 'I need be'\r\n```\r\n \r\n**Method `.replace(string, search, replace)`**\r\n\r\n*(Replace search with new value)*\r\n```js     \r\nvar _string = 'I need be truncated until here'      \r\n\r\n//Simple string replace\r\n_.replace(_string, 'truncated', 'happy'); // 'I need be happy until here' \r\n\r\n//Or using regexp\r\n_.replace(_string, /truncated/, {'truncated': 'new_val'}); // 'I need be new_val until here'\r\n```     \r\n\r\n**Method `.objectAsString(string, search, replace)`**\r\n \r\n*(Return a object with the string type)*\r\n```js  \r\nvar _my_object = {a:1,b:2c:3};    \r\n\r\n_.objectAsString(_my_object); // Return [Object object]; \r\n```\r\n  \r\n**Method `.jsonToQueryString(object)`**\r\n \r\n*(Return a URL query string)*\r\n```js  \r\nvar _my_object = {a:1,b:2c:3};    \r\n\r\n_.jsonToQueryString(_my_object); // Return a=1&b=2&c=3; \r\n```\r\n\r\n**Method `.jsonToString(object)`**\r\n\r\n*(Parse object to string Shortcut for JSON.stringify)*\r\n```js\r\n   var a = {a:1,b:2};\r\n   _.jsonToString(a); // '{\"a\":\"1\", \"b\":\"2\"}'\r\n```\r\n\r\n**Method `.repeatString(str, times)`**\r\n \r\n*(Return repeated string)* \r\n```js  \r\n_.repeatString('Happy!', 4); \r\n// Return Happy!Happy!Happy!Happy!;\r\n```\r\n     \r\nGetters\r\n----------\r\n\r\n**Method `.getDate(date)`**\r\n\r\n*(Returns the date on the parameter, if the parameter is not passed, it uses the current date )*\r\n```js     \r\n_.getDate(); \r\n//If today is 2014-05-12 08:25:02\r\n//Return Example {\r\n        day: 12,\r\n        month: 'May',\r\n        year: 2014,\r\n        hour: 08,\r\n        minutes: 25,\r\n        seconds: 02\r\n        meridian: PM || AM\r\n        \r\n    }\r\n                    \r\n_.getDate('2014-10-13 08:25:02'); \r\n// Param used\r\n//Return Example {\r\n         day: 13,\r\n         month: 'October',\r\n         year: 2014,\r\n         hour: 08,\r\n         minutes: 25,\r\n         seconds: 02\r\n         meridian: PM || AM\r\n         \r\n     }\r\n```\r\n     \r\n**Method `.getNav()`**\r\n\r\n*(Returns the used nav)*\r\n```js     \r\n_.getNav(); \r\n//Return Example {\r\n        nav: 'Chrome',\r\n        version: '32'\r\n        platform: 'Linux x86_64',\r\n    }\r\n```\r\n            \r\n**Method `.getEncodedId(length(optional))`**\r\n\r\n*(Returns a simple encoded id. If length is passed the code is truncated)*\r\n```js     \r\n_.getEncodedId(10); //aA25Gtsht6\r\n```     \r\n\r\n**Method `.getObjectKeys(object)`**\r\n\r\n*(Returns object keys.)*\r\n```js\r\nvar _my_object = {a:1,b:2,c:3};\r\n_.getObjectKeys(_my_object); // Return [a,b,c]\r\n```\r\n\r\n**Method `.getObjectValues(object)`**\r\n\r\n*(Returns object values.)*\r\n```js\r\nvar _my_object = {a:1,b:2,c:3};\r\n_.getObjectValues(_my_object); // Return [1,2,3]\r\n```\r\n     \r\n**Method `.getObjectSize(object)`**\r\n\r\n*(Returns the object size.)*\r\n```js\r\nvar _my_object = {a:1,b:2,c:3};\r\n_.getObjectSize(_my_object); // Return 3\r\n```\r\n     \r\n**Method `.getCookie(name)`**\r\n\r\n*(Returns cookies.)*\r\n```js    \r\n//Cookie my_cookie=asf58as52dsf84e5\r\n//Cookie my_csrf=asdf584a2d48rwefr42\r\n\r\n _.getCookie('my_cookie'); // Return asf58as52dsf84e5\r\n _.getCookie('my_csrf'); // Return asdf584a2d48rwefr42\r\n```\r\n\r\n**Method `.getScript(url, callback)`**\r\n\r\n*(Get local or remote script.)*\r\n```js    \r\n_.getScript('//ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js', function(){\r\n    //Script ready\r\n});\r\n```\r\n\r\n**Method `.requestAnimationFrame(callback)`**\r\n\r\n*(Simple fallback. Gives the browser control over how many frames it renders..)*\r\n```js    \r\n\r\n function render(time){\r\n    console.log(time);\r\n }\r\n \r\n _$('body').listen('click','#startRender', function(){\r\n        _.requestAnimationFrame(render);\r\n })\r\n```\r\n\r\n**Method `.getScript(url, callback)`**\r\n\r\n*(Get local or remote script.)*\r\n```js    \r\n_.getScript('//ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js', function(){\r\n    //Script ready\r\n});\r\n```\r\n\r\nSyrup Working\r\n========\r\n\r\nControllers\r\n-------------\r\n\r\nControllers are an intermediary between models and views which are classically responsible for two tasks: \r\nthey both update the view when the model changes and update the model when the user manipulates the view.\r\n\r\n*In Syrup drivers are handled from a dedicated environment (application modules), not combined application*\r\n\r\n*The Controllers are located in the folder \"app/controller/module_name/init.js\", and are called to our site with script tags right after call Syrup core*\r\n\r\n*Example:*\r\n\r\n*In this case the module name is index and contact respectively*\r\n```html\r\n<script src=\"YOUR PATH/Syrup/dist/init.min.js\"></script>\r\n<script src=\"YOUR PATH/Syrup/app/controller/index/init.js\"></script>\r\n                              **OR IN CASE**\r\n<script src=\"YOUR PATH/Syrup/app/controller/contact/init.js\"></script>\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}