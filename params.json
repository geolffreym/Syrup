{"name":"Syrup","tagline":"App with sweet flavor","body":"Syrup\r\n=======\r\nApp with sweet flavor\r\n\r\n[![Gitter](https://badges.gitter.im/Join Chat.svg)](https://gitter.im/geolffreym/Syrup?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\r\n\r\nContent\r\n=======\r\n\r\n* [Core](https://github.com/geolffreym/Syrup/blob/master/readme/CORE.md)\r\n* [About] (https://github.com/geolffreym/Syrup/blob/master/readme/ABOUT.md)\r\n\r\n\r\nDescription\r\n===========\r\n\r\n**With the help of**\r\n\r\n* Templating [Mustache](https://github.com/janl/mustache.js)\r\n* Web Dependencies [Requirejs](http://requirejs.org/docs/api.html)\r\n\r\n\r\n**Based**\r\n\r\n*MVC Pattern:*\r\n\r\n* Model\r\n* View\r\n* Controller\r\n \r\n*MTV Pattern:*\r\n\r\n* Model\r\n* View\r\n* Template\r\n\r\n\r\nCompatibility with browsers\r\n---------------------------\r\n    \r\n    -IE > 10\r\n    -Chrome > 32\r\n    -Firefox > 29\r\n    -Opera > 23 \r\n    -Safari >  7 \r\n\r\n\r\nControlling browsers support.\r\n\r\n```js\r\nif(_.nav.unsupported){\r\n    //What to do?\r\n}\r\n```\r\n*If there is any browser incompatibility please notify*\r\n\r\n\r\nInstallation\r\n-----------\r\n\r\nUsing [Bower](http://bower.io/):\r\n\r\n`bower install syrup`\r\n\r\nUsing [Git](http://git-scm.com/docs/git-clone):\r\n\r\n`git clone https://github.com/geolffreym/Syrup.git` \r\n\r\n\r\nConfig\r\n------\r\nConfiguration is very simple, you just have to access the folder /config/ and edit the file init.js \r\n\r\nYou need to set the APP_PATH, is who is responsible for setting the relative directory of your application, the default is '/' and finally the environment, which can be either development or production.\r\n\r\n*Example APP_PATH: (/assets/)*  \r\n\r\n  \r\nJoining files\r\n-------------\r\n\r\n**Node JS Required**\r\n\r\nBlend files is relatively simple, you must first establish the libraries you want to use in environment.\r\n\r\nSyrup is modular so you can create your own libraries and integrate the autoloader\r\n\r\n```js\r\n//Development\r\n exports.files = {\r\n        js: {\r\n            output: 'dist/init', //The output\r\n            src: [\r\n                'app/config/init', // Needed do not change\r\n                'system/base/init', // Needed do not change\r\n//              'lib/Form',\r\n//              'lib/Upload' // Add all the necessary scripts for startup\r\n            ]\r\n\r\n        }\r\n    }\r\n```\r\n\r\nThen you must get packages with `npm install` and finally run `npm start` and you'll have a unified library and .min in folder /dist/\r\n\r\n*If you do not have the option of using node, you must manually change the settings in the /dist/init.js and include libs separately*\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}